PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "Config" ("Id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, "Key" TEXT NOT NULL, "Value" TEXT NOT NULL);
INSERT INTO Config VALUES(1,'plexclientidentifier','8a444a73-2f25-419e-8ccb-0aa48f51a433');
INSERT INTO Config VALUES(2,'rijndaelpassphrase','a7e5a2f1-871f-48a9-9f45-e204f66173c1');
INSERT INTO Config VALUES(3,'hmacpassphrase','f73d9e7f-a390-4349-babb-ab375e1b04a6');
INSERT INTO Config VALUES(4,'rijndaelsalt','e617e1d7-5b4d-4829-a267-eccb88b640a2');
INSERT INTO Config VALUES(5,'hmacsalt','e92eab2d-bd37-46e2-9b7d-6b9dcc7c8e77');
INSERT INTO Config VALUES(6,'downloadprotectionkey','3170962f56864e30b0785f095b56c9c3');
CREATE TABLE IF NOT EXISTS "Notifications" ("Id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, "Name" TEXT NOT NULL, "Settings" TEXT NOT NULL, "Implementation" TEXT NOT NULL, "ConfigContract" TEXT, "Tags" TEXT, "OnHealthIssue" INTEGER NOT NULL, "IncludeHealthWarnings" INTEGER NOT NULL, "OnApplicationUpdate" INTEGER NOT NULL DEFAULT 0, "OnGrab" INTEGER NOT NULL DEFAULT 0, "IncludeManualGrabs" INTEGER NOT NULL DEFAULT 0, "OnHealthRestored" INTEGER NOT NULL DEFAULT 0);
CREATE TABLE IF NOT EXISTS "ApplicationIndexerMapping" ("Id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, "IndexerId" INTEGER NOT NULL, "AppId" INTEGER NOT NULL, "RemoteIndexerId" INTEGER NOT NULL, "RemoteIndexerName" TEXT);
CREATE TABLE IF NOT EXISTS "Applications" ("Id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, "Name" TEXT NOT NULL, "Implementation" TEXT NOT NULL, "Settings" TEXT, "ConfigContract" TEXT, "SyncLevel" INTEGER NOT NULL, "Tags" TEXT);
CREATE TABLE IF NOT EXISTS "Tags" ("Id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, "Label" TEXT NOT NULL);
INSERT INTO Tags VALUES(1,'flaresolverr');
CREATE TABLE IF NOT EXISTS "Users" ("Id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, "Identifier" TEXT NOT NULL, "Username" TEXT NOT NULL, "Password" TEXT NOT NULL, "Salt" TEXT, "Iterations" INTEGER);
INSERT INTO Users VALUES(1,'9a6d2376-7b2b-4f81-9927-beef9b18b618','admin','Q2mwExdCTS4GDSUS1C6jRXtVSHk7BM/xd/KaR0tY5jY=','xriK3iQOdLb2shAt0qH/9g==',10000);
CREATE TABLE IF NOT EXISTS "CustomFilters" ("Id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, "Type" TEXT NOT NULL, "Label" TEXT NOT NULL, "Filters" TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS "DownloadClients" ("Id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, "Enable" INTEGER NOT NULL, "Name" TEXT NOT NULL, "Implementation" TEXT NOT NULL, "Settings" TEXT NOT NULL, "ConfigContract" TEXT NOT NULL, "Priority" INTEGER NOT NULL DEFAULT 1, "Categories" TEXT NOT NULL DEFAULT '[]');
INSERT INTO DownloadClients VALUES(1,1,'qBittorrent','QBittorrent',unistr('{\u000a  "host": "nginx-proxy",\u000a  "port": 8080,\u000a  "useSsl": false,\u000a  "urlBase": "",\u000a  "username": "admin",\u000a  "password": "adminadmin",\u000a  "category": "",\u000a  "priority": 0,\u000a  "initialState": 0,\u000a  "sequentialOrder": false,\u000a  "firstAndLast": false\u000a}'),'QBittorrentSettings',1,'[]');
CREATE TABLE IF NOT EXISTS "AppSyncProfiles" ("Id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, "Name" TEXT NOT NULL, "EnableRss" INTEGER NOT NULL, "EnableInteractiveSearch" INTEGER NOT NULL, "EnableAutomaticSearch" INTEGER NOT NULL, "MinimumSeeders" INTEGER NOT NULL DEFAULT 1);
INSERT INTO AppSyncProfiles VALUES(1,'Standard',1,1,1,1);
CREATE TABLE IF NOT EXISTS "IndexerProxies" ("Id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, "Name" TEXT NOT NULL, "Settings" TEXT NOT NULL, "Implementation" TEXT NOT NULL, "ConfigContract" TEXT, "Tags" TEXT);
INSERT INTO IndexerProxies VALUES(1,'FlareSolverr',unistr('{\u000a  "host": "http://flaresolverr:8191/",\u000a  "requestTimeout": 60\u000a}'),'FlareSolverr','FlareSolverrSettings',unistr('[\u000a  1\u000a]'));
CREATE TABLE IF NOT EXISTS "ApplicationStatus" ("Id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, "ProviderId" INTEGER NOT NULL, "InitialFailure" DATETIME, "MostRecentFailure" DATETIME, "EscalationLevel" INTEGER NOT NULL, "DisabledTill" DATETIME);
CREATE TABLE IF NOT EXISTS "Commands" ("Id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, "Name" TEXT NOT NULL, "Body" TEXT NOT NULL, "Priority" INTEGER NOT NULL, "Status" INTEGER NOT NULL, "QueuedAt" DATETIME NOT NULL, "StartedAt" DATETIME, "EndedAt" DATETIME, "Duration" TEXT, "Exception" TEXT, "Trigger" INTEGER NOT NULL);
INSERT INTO Commands VALUES(1,'MessagingCleanup',unistr('{\u000a  "sendUpdatesToClient": false,\u000a  "updateScheduledTask": true,\u000a  "requiresDiskAccess": false,\u000a  "isExclusive": false,\u000a  "isTypeExclusive": false,\u000a  "name": "MessagingCleanup",\u000a  "lastExecutionTime": "2025-09-12T16:56:41Z",\u000a  "lastStartTime": "0001-01-01T04:57:00Z",\u000a  "trigger": "scheduled",\u000a  "suppressMessages": false\u000a}'),-1,2,'2025-09-12 17:01:41.4618568Z','2025-09-12 17:01:41.4913044Z','2025-09-12 17:01:41.5010026Z','00:00:00.0096982',NULL,2);
INSERT INTO Commands VALUES(2,'MessagingCleanup',unistr('{\u000a  "sendUpdatesToClient": false,\u000a  "updateScheduledTask": true,\u000a  "requiresDiskAccess": false,\u000a  "isExclusive": false,\u000a  "isTypeExclusive": false,\u000a  "name": "MessagingCleanup",\u000a  "lastExecutionTime": "2025-09-12T17:01:41Z",\u000a  "lastStartTime": "2025-09-12T17:01:41Z",\u000a  "trigger": "scheduled",\u000a  "suppressMessages": false\u000a}'),-1,2,'2025-09-12 17:06:55.426654Z','2025-09-12 17:06:55.4580645Z','2025-09-12 17:06:55.4734543Z','00:00:00.0153898',NULL,2);
INSERT INTO Commands VALUES(3,'MessagingCleanup',unistr('{\u000a  "sendUpdatesToClient": false,\u000a  "updateScheduledTask": true,\u000a  "requiresDiskAccess": false,\u000a  "isExclusive": false,\u000a  "isTypeExclusive": false,\u000a  "name": "MessagingCleanup",\u000a  "lastExecutionTime": "2025-09-12T17:06:55Z",\u000a  "lastStartTime": "2025-09-12T17:06:55Z",\u000a  "trigger": "scheduled",\u000a  "suppressMessages": false\u000a}'),-1,2,'2025-09-12 17:12:25.4608897Z','2025-09-12 17:12:25.4768713Z','2025-09-12 17:12:25.485144Z','00:00:00.0082727',NULL,2);
CREATE TABLE IF NOT EXISTS "DownloadClientStatus" ("Id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, "ProviderId" INTEGER NOT NULL, "InitialFailure" DATETIME, "MostRecentFailure" DATETIME, "EscalationLevel" INTEGER NOT NULL, "DisabledTill" DATETIME);
CREATE TABLE IF NOT EXISTS "History" ("Id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, "IndexerId" INTEGER NOT NULL, "Date" DATETIME NOT NULL, "Data" TEXT NOT NULL, "EventType" INTEGER, "DownloadId" TEXT, "Successful" INTEGER NOT NULL);
CREATE TABLE IF NOT EXISTS "IndexerDefinitionVersions" ("Id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, "DefinitionId" TEXT NOT NULL, "File" TEXT NOT NULL, "Sha" TEXT, "LastUpdated" DATETIME);
CREATE TABLE IF NOT EXISTS "IndexerStatus" ("Id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, "ProviderId" INTEGER NOT NULL, "InitialFailure" DATETIME, "MostRecentFailure" DATETIME, "EscalationLevel" INTEGER NOT NULL, "DisabledTill" DATETIME, "LastRssSyncReleaseInfo" TEXT, "Cookies" TEXT, "CookiesExpirationDate" DATETIME);
CREATE TABLE IF NOT EXISTS "Indexers" ("Id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, "Name" TEXT NOT NULL, "Implementation" TEXT NOT NULL, "Settings" TEXT, "ConfigContract" TEXT, "Enable" INTEGER, "Priority" INTEGER NOT NULL, "Added" DATETIME NOT NULL, "Redirect" INTEGER NOT NULL, "AppProfileId" INTEGER NOT NULL, "Tags" TEXT, "DownloadClientId" INTEGER NOT NULL);
INSERT INTO Indexers VALUES(1,'0Magnet','Cardigann',unistr('{\u000a  "definitionFile": "0magnet",\u000a  "extraFieldData": {},\u000a  "baseSettings": {\u000a    "limitsUnit": 0\u000a  },\u000a  "torrentBaseSettings": {\u000a    "preferMagnetUrl": false\u000a  }\u000a}'),'CardigannSettings',1,25,'2025-09-12 17:05:57.8231148Z',0,1,unistr('[\u000a  1\u000a]'),0);
INSERT INTO Indexers VALUES(2,'BitSearch','Cardigann',unistr('{\u000a  "definitionFile": "bitsearch",\u000a  "extraFieldData": {\u000a    "sort": 0,\u000a    "type": 1\u000a  },\u000a  "baseSettings": {\u000a    "limitsUnit": 0\u000a  },\u000a  "torrentBaseSettings": {\u000a    "preferMagnetUrl": false\u000a  }\u000a}'),'CardigannSettings',1,25,'2025-09-12 17:06:31.5261435Z',0,1,unistr('[\u000a  1\u000a]'),0);
INSERT INTO Indexers VALUES(3,'BTdirectory','Cardigann',unistr('{\u000a  "definitionFile": "btdirectory",\u000a  "extraFieldData": {\u000a    "info_category_8000": "BTdirectory does not return categories in its search results. To sync to your apps, include 8000(Other) in your Apps\\u0027 Sync Categories."\u000a  },\u000a  "baseSettings": {\u000a    "limitsUnit": 0\u000a  },\u000a  "torrentBaseSettings": {\u000a    "preferMagnetUrl": false\u000a  }\u000a}'),'CardigannSettings',1,25,'2025-09-12 17:06:45.5403763Z',0,1,unistr('[\u000a  1\u000a]'),0);
INSERT INTO Indexers VALUES(4,'btstate','Cardigann',unistr('{\u000a  "definitionFile": "btstate",\u000a  "extraFieldData": {\u000a    "info_category_8000": "btstate does not return categories in its search results. To sync to your apps, include 8000(Other) in your Apps\\u0027 Sync Categories."\u000a  },\u000a  "baseSettings": {\u000a    "limitsUnit": 0\u000a  },\u000a  "torrentBaseSettings": {\u000a    "preferMagnetUrl": false\u000a  }\u000a}'),'CardigannSettings',1,25,'2025-09-12 17:06:49.2163644Z',0,1,unistr('[\u000a  1\u000a]'),0);
INSERT INTO Indexers VALUES(5,'1337x','Cardigann',unistr('{\u000a  "definitionFile": "1337x",\u000a  "extraFieldData": {\u000a    "uploader": "",\u000a    "info_uploader": "You can filter by Uploader by entering a Case Sensitive username, or leave empty to get all results.\\u003Cbr\\u003ENote: this is the username of the Uploader and not the Groupname that often show up at the end of 1337x titles, eg -GalaxyRG.",\u000a    "info_flaresolverr": "This site may use Cloudflare DDoS Protection, therefore Prowlarr requires \\u003Ca href=\\u0022https://wiki.servarr.com/prowlarr/faq#can-i-use-flaresolverr-indexers\\u0022 target=\\u0022_blank\\u0022 rel=\\u0022noreferrer\\u0022\\u003EFlareSolverr\\u003C/a\\u003E to access it.",\u000a    "downloadlink": 0,\u000a    "downloadlink2": 1,\u000a    "info_download": "As the iTorrents .torrent download link on this site is known to fail from time to time, we suggest using the magnet link as a fallback. The BTCache and Torrage services are not supported because they require additional user interaction (a captcha for BTCache and a download button on Torrage.)",\u000a    "sort": 2,\u000a    "type": 1\u000a  },\u000a  "baseSettings": {\u000a    "limitsUnit": 0\u000a  },\u000a  "torrentBaseSettings": {\u000a    "preferMagnetUrl": false\u000a  }\u000a}'),'CardigannSettings',1,25,'2025-09-12 17:08:02.0423812Z',0,1,unistr('[\u000a  1\u000a]'),0);
INSERT INTO Indexers VALUES(6,'EZTV','Cardigann',unistr('{\u000a  "definitionFile": "eztv",\u000a  "extraFieldData": {},\u000a  "baseSettings": {\u000a    "limitsUnit": 0\u000a  },\u000a  "torrentBaseSettings": {\u000a    "preferMagnetUrl": false\u000a  }\u000a}'),'CardigannSettings',1,25,'2025-09-12 17:09:01.3456407Z',0,1,unistr('[\u000a  1\u000a]'),0);
INSERT INTO Indexers VALUES(7,'ExtraTorrent.st','Cardigann',unistr('{\u000a  "definitionFile": "extratorrent-st",\u000a  "extraFieldData": {\u000a    "info_flaresolverr": "This site may use Cloudflare DDoS Protection, therefore Prowlarr requires \\u003Ca href=\\u0022https://wiki.servarr.com/prowlarr/faq#can-i-use-flaresolverr-indexers\\u0022 target=\\u0022_blank\\u0022 rel=\\u0022noreferrer\\u0022\\u003EFlareSolverr\\u003C/a\\u003E to access it."\u000a  },\u000a  "baseSettings": {\u000a    "limitsUnit": 0\u000a  },\u000a  "torrentBaseSettings": {\u000a    "preferMagnetUrl": false\u000a  }\u000a}'),'CardigannSettings',1,25,'2025-09-12 17:09:03.741182Z',0,1,unistr('[\u000a  1\u000a]'),0);
INSERT INTO Indexers VALUES(8,'FileMood','Cardigann',unistr('{\u000a  "definitionFile": "filemood",\u000a  "extraFieldData": {\u000a    "info_category_8000": "FileMood does not return categories in its search results. To sync to your apps, include 8000(Other) in your Apps\\u0027 Sync Categories."\u000a  },\u000a  "baseSettings": {\u000a    "limitsUnit": 0\u000a  },\u000a  "torrentBaseSettings": {\u000a    "preferMagnetUrl": false\u000a  }\u000a}'),'CardigannSettings',1,25,'2025-09-12 17:09:06.4477817Z',0,1,unistr('[\u000a  1\u000a]'),0);
INSERT INTO Indexers VALUES(9,'kickasstorrents.ws','Cardigann',unistr('{\u000a  "definitionFile": "kickasstorrents-ws",\u000a  "extraFieldData": {\u000a    "sort": 2,\u000a    "type": 1\u000a  },\u000a  "baseSettings": {\u000a    "limitsUnit": 0\u000a  },\u000a  "torrentBaseSettings": {\u000a    "preferMagnetUrl": false\u000a  }\u000a}'),'CardigannSettings',1,25,'2025-09-12 17:09:30.1910693Z',0,1,unistr('[\u000a  1\u000a]'),0);
INSERT INTO Indexers VALUES(10,'Isohunt2','Cardigann',unistr('{\u000a  "definitionFile": "isohunt2",\u000a  "extraFieldData": {\u000a    "category": 0,\u000a    "sort": 0\u000a  },\u000a  "baseSettings": {\u000a    "limitsUnit": 0\u000a  },\u000a  "torrentBaseSettings": {\u000a    "preferMagnetUrl": false\u000a  }\u000a}'),'CardigannSettings',1,25,'2025-09-12 17:09:39.4738125Z',0,1,unistr('[\u000a  1\u000a]'),0);
INSERT INTO Indexers VALUES(11,'LimeTorrents','Cardigann',unistr('{\u000a  "definitionFile": "limetorrents",\u000a  "extraFieldData": {\u000a    "downloadlink": 1,\u000a    "downloadlink2": 0,\u000a    "info_download": "As the .torrent download links on this site are known to fail from time to time, you can optionally set as a fallback an automatic alternate link.",\u000a    "sort": 0,\u000a    "info_category_8000": "LimeTorrents only returns category \\u003Cb\\u003EOther\\u003C/b\\u003E in its \\u003Ci\\u003EKeywordless\\u003C/i\\u003E search results page.\\u003C/br\\u003ETo pass your apps\\u0027 indexer TEST you will need to include the 8000(Other) category."\u000a  },\u000a  "baseSettings": {\u000a    "limitsUnit": 0\u000a  },\u000a  "torrentBaseSettings": {\u000a    "preferMagnetUrl": false\u000a  }\u000a}'),'CardigannSettings',1,25,'2025-09-12 17:09:46.0077493Z',0,1,unistr('[\u000a  1\u000a]'),0);
INSERT INTO Indexers VALUES(12,'Magnet Cat','Cardigann',unistr('{\u000a  "definitionFile": "magnetcat",\u000a  "extraFieldData": {\u000a    "cat-id": 0,\u000a    "sort": 2\u000a  },\u000a  "baseSettings": {\u000a    "limitsUnit": 0\u000a  },\u000a  "torrentBaseSettings": {\u000a    "preferMagnetUrl": false\u000a  }\u000a}'),'CardigannSettings',1,25,'2025-09-12 17:10:07.3503149Z',0,1,unistr('[\u000a  1\u000a]'),0);
INSERT INTO Indexers VALUES(13,'The Pirate Bay','Cardigann',unistr('{\u000a  "definitionFile": "thepiratebay",\u000a  "extraFieldData": {\u000a    "uploader": "",\u000a    "info_uploader": "You can filter by Uploader by entering a Case Sensitive username, or leave empty to get all results.\\u003Cbr\\u003ENote: this is the username of the Uploader and not the Groupname that often show up at the end of TPB titles, eg -MeGusta.",\u000a    "info_api": "This indexer uses the API at https://apibay.org/ to get its official TPB data. Choose any site link that you can access/prefer so that you can view the torrent details page when browsing the search results for this indexer."\u000a  },\u000a  "baseSettings": {\u000a    "limitsUnit": 0\u000a  },\u000a  "torrentBaseSettings": {\u000a    "preferMagnetUrl": false\u000a  }\u000a}'),'CardigannSettings',1,25,'2025-09-12 17:10:12.1635035Z',0,1,unistr('[\u000a  1\u000a]'),0);
INSERT INTO Indexers VALUES(14,'kickasstorrents.to','Cardigann',unistr('{\u000a  "definitionFile": "kickasstorrents-to",\u000a  "extraFieldData": {\u000a    "info_flaresolverr": "This site may use Cloudflare DDoS Protection, therefore Prowlarr requires \\u003Ca href=\\u0022https://wiki.servarr.com/prowlarr/faq#can-i-use-flaresolverr-indexers\\u0022 target=\\u0022_blank\\u0022 rel=\\u0022noreferrer\\u0022\\u003EFlareSolverr\\u003C/a\\u003E to access it."\u000a  },\u000a  "baseSettings": {\u000a    "limitsUnit": 0\u000a  },\u000a  "torrentBaseSettings": {\u000a    "preferMagnetUrl": false\u000a  }\u000a}'),'CardigannSettings',1,25,'2025-09-12 17:10:12.3622271Z',0,1,unistr('[\u000a  1\u000a]'),0);
INSERT INTO Indexers VALUES(15,'TheRARBG','Cardigann',unistr('{\u000a  "definitionFile": "therarbg",\u000a  "extraFieldData": {\u000a    "sort": 0\u000a  },\u000a  "baseSettings": {\u000a    "limitsUnit": 0\u000a  },\u000a  "torrentBaseSettings": {\u000a    "preferMagnetUrl": false\u000a  }\u000a}'),'CardigannSettings',1,25,'2025-09-12 17:12:34.4875445Z',0,1,unistr('[\u000a  1\u000a]'),0);
INSERT INTO Indexers VALUES(16,'Torrent Downloads','Cardigann',unistr('{\u000a  "definitionFile": "torrentdownloads",\u000a  "extraFieldData": {\u000a    "downloadlink": 1,\u000a    "downloadlink2": 0,\u000a    "info_download": "As the .torrent download links on this site are known to fail from time to time, you can optionally set as a fallback an automatic alternate link."\u000a  },\u000a  "baseSettings": {\u000a    "limitsUnit": 0\u000a  },\u000a  "torrentBaseSettings": {\u000a    "preferMagnetUrl": false\u000a  }\u000a}'),'CardigannSettings',1,25,'2025-09-12 17:12:39.160357Z',0,1,unistr('[\u000a  1\u000a]'),0);
INSERT INTO Indexers VALUES(17,'TorrentDownload','Cardigann',unistr('{\u000a  "definitionFile": "torrentdownload",\u000a  "extraFieldData": {\u000a    "sort": 1\u000a  },\u000a  "baseSettings": {\u000a    "limitsUnit": 0\u000a  },\u000a  "torrentBaseSettings": {\u000a    "preferMagnetUrl": false\u000a  }\u000a}'),'CardigannSettings',1,25,'2025-09-12 17:12:47.699227Z',0,1,unistr('[\u000a  1\u000a]'),0);
INSERT INTO Indexers VALUES(18,'TorrentGalaxyClone','Cardigann',unistr('{\u000a  "definitionFile": "torrentgalaxyclone",\u000a  "extraFieldData": {\u000a    "uploader": "",\u000a    "info_uploader": "You can filter by Uploader by entering a Case Sensitive username, or leave empty to get all results.\\u003Cbr\\u003ENote: this is the username of the Uploader and not the Groupname that often show up at the end of TGx titles, eg RMTeam."\u000a  },\u000a  "baseSettings": {\u000a    "limitsUnit": 0\u000a  },\u000a  "torrentBaseSettings": {\u000a    "preferMagnetUrl": false\u000a  }\u000a}'),'CardigannSettings',1,25,'2025-09-12 17:12:52.7859731Z',0,1,unistr('[\u000a  1\u000a]'),0);
INSERT INTO Indexers VALUES(19,'Uindex','Cardigann',unistr('{\u000a  "definitionFile": "uindex",\u000a  "extraFieldData": {},\u000a  "baseSettings": {\u000a    "limitsUnit": 0\u000a  },\u000a  "torrentBaseSettings": {\u000a    "preferMagnetUrl": false\u000a  }\u000a}'),'CardigannSettings',1,25,'2025-09-12 17:13:06.7298002Z',0,1,unistr('[\u000a  1\u000a]'),0);
INSERT INTO Indexers VALUES(20,'YTS','Cardigann',unistr('{\u000a  "definitionFile": "yts",\u000a  "extraFieldData": {},\u000a  "baseSettings": {\u000a    "limitsUnit": 0\u000a  },\u000a  "torrentBaseSettings": {\u000a    "preferMagnetUrl": false\u000a  }\u000a}'),'CardigannSettings',1,25,'2025-09-12 17:13:17.8322377Z',0,1,unistr('[\u000a  1\u000a]'),0);
CREATE TABLE IF NOT EXISTS "ScheduledTasks" ("Id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, "TypeName" TEXT NOT NULL, "Interval" INTEGER NOT NULL, "LastExecution" DATETIME NOT NULL, "LastStartTime" DATETIME);
INSERT INTO ScheduledTasks VALUES(1,'NzbDrone.Core.Messaging.Commands.MessagingCleanupCommand',5,'2025-09-12 17:12:25.4912572Z','2025-09-12 17:12:25.4768713Z');
INSERT INTO ScheduledTasks VALUES(2,'NzbDrone.Core.Update.Commands.ApplicationUpdateCheckCommand',360,'2025-09-12 16:56:41.4585092Z','0001-01-01 04:57:00Z');
INSERT INTO ScheduledTasks VALUES(3,'NzbDrone.Core.HealthCheck.CheckHealthCommand',360,'2025-09-12 16:56:41.4644902Z','0001-01-01 04:57:00Z');
INSERT INTO ScheduledTasks VALUES(4,'NzbDrone.Core.Housekeeping.HousekeepingCommand',1440,'2025-09-12 16:56:41.4692487Z','0001-01-01 04:57:00Z');
INSERT INTO ScheduledTasks VALUES(5,'NzbDrone.Core.History.CleanUpHistoryCommand',1440,'2025-09-12 16:56:41.4749577Z','0001-01-01 04:57:00Z');
INSERT INTO ScheduledTasks VALUES(6,'NzbDrone.Core.IndexerVersions.IndexerDefinitionUpdateCommand',1440,'2025-09-12 16:56:41.4797339Z','0001-01-01 04:57:00Z');
INSERT INTO ScheduledTasks VALUES(7,'NzbDrone.Core.Applications.ApplicationIndexerSyncCommand',360,'2025-09-12 16:56:41.4853452Z','0001-01-01 04:57:00Z');
INSERT INTO ScheduledTasks VALUES(8,'NzbDrone.Core.Backup.BackupCommand',10080,'2025-09-12 16:56:41.4904342Z','0001-01-01 04:57:00Z');
CREATE TABLE IF NOT EXISTS "VersionInfo" ("Version" INTEGER NOT NULL, "AppliedOn" DATETIME, "Description" TEXT);
INSERT INTO VersionInfo VALUES(1,'2025-09-12T16:56:40','InitialSetup');
INSERT INTO VersionInfo VALUES(2,'2025-09-12T16:56:40','ApplicationStatus');
INSERT INTO VersionInfo VALUES(3,'2025-09-12T16:56:40','IndexerProps');
INSERT INTO VersionInfo VALUES(4,'2025-09-12T16:56:40','add_update_history');
INSERT INTO VersionInfo VALUES(5,'2025-09-12T16:56:40','update_notifiarr');
INSERT INTO VersionInfo VALUES(6,'2025-09-12T16:56:40','app_profiles');
INSERT INTO VersionInfo VALUES(7,'2025-09-12T16:56:40','history_failed');
INSERT INTO VersionInfo VALUES(8,'2025-09-12T16:56:40','redacted_api');
INSERT INTO VersionInfo VALUES(10,'2025-09-12T16:56:40','IndexerProxies');
INSERT INTO VersionInfo VALUES(11,'2025-09-12T16:56:40','app_indexer_remote_name');
INSERT INTO VersionInfo VALUES(13,'2025-09-12T16:56:40','desi_gazelle_to_unit3d');
INSERT INTO VersionInfo VALUES(14,'2025-09-12T16:56:40','add_on_update_to_notifications');
INSERT INTO VersionInfo VALUES(15,'2025-09-12T16:56:40','IndexerVersions');
INSERT INTO VersionInfo VALUES(16,'2025-09-12T16:56:40','cleanup_config');
INSERT INTO VersionInfo VALUES(17,'2025-09-12T16:56:40','indexer_cleanup');
INSERT INTO VersionInfo VALUES(18,'2025-09-12T16:56:40','minimum_seeders');
INSERT INTO VersionInfo VALUES(19,'2025-09-12T16:56:40','remove_showrss');
INSERT INTO VersionInfo VALUES(20,'2025-09-12T16:56:40','remove_torrentparadiseml');
INSERT INTO VersionInfo VALUES(21,'2025-09-12T16:56:40','localization_setting_to_string');
INSERT INTO VersionInfo VALUES(22,'2025-09-12T16:56:40','orpheus_api');
INSERT INTO VersionInfo VALUES(23,'2025-09-12T16:56:40','download_client_categories');
INSERT INTO VersionInfo VALUES(24,'2025-09-12T16:56:40','add_salt_to_users');
INSERT INTO VersionInfo VALUES(25,'2025-09-12T16:56:40','speedcd_userpasssettings_to_speedcdsettings');
INSERT INTO VersionInfo VALUES(26,'2025-09-12T16:56:40','torrentday_cookiesettings_to_torrentdaysettings');
INSERT INTO VersionInfo VALUES(27,'2025-09-12T16:56:40','alpharatio_greatposterwall_config_contract');
INSERT INTO VersionInfo VALUES(28,'2025-09-12T16:56:40','remove_notwhatcd');
INSERT INTO VersionInfo VALUES(29,'2025-09-12T16:56:40','add_on_grab_to_notifications');
INSERT INTO VersionInfo VALUES(30,'2025-09-12T16:56:40','animetorrents_use_custom_config_contract');
INSERT INTO VersionInfo VALUES(31,'2025-09-12T16:56:40','apprise_server_url');
INSERT INTO VersionInfo VALUES(32,'2025-09-12T16:56:40','health_restored_notification');
INSERT INTO VersionInfo VALUES(33,'2025-09-12T16:56:40','remove_uc');
INSERT INTO VersionInfo VALUES(34,'2025-09-12T16:56:40','history_fix_data_titles');
INSERT INTO VersionInfo VALUES(35,'2025-09-12T16:56:40','download_client_per_indexer');
INSERT INTO VersionInfo VALUES(36,'2025-09-12T16:56:40','postgres_update_timestamp_columns_to_with_timezone');
INSERT INTO VersionInfo VALUES(37,'2025-09-12T16:56:40','add_notification_status');
INSERT INTO VersionInfo VALUES(38,'2025-09-12T16:56:40','indexers_freeleech_only_config_contract');
INSERT INTO VersionInfo VALUES(39,'2025-09-12T16:56:40','email_encryption');
INSERT INTO VersionInfo VALUES(40,'2025-09-12T16:56:40','newznab_category_to_capabilities_settings');
INSERT INTO VersionInfo VALUES(41,'2025-09-12T16:56:40','gazelle_freeleech_token_options');
INSERT INTO VersionInfo VALUES(42,'2025-09-12T16:56:40','myanonamouse_freeleech_wedge_options');
INSERT INTO VersionInfo VALUES(43,'2025-09-12T16:56:40','newznab_indexers_enable_redirect');
CREATE TABLE IF NOT EXISTS "NotificationStatus" ("Id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, "ProviderId" INTEGER NOT NULL, "InitialFailure" DATETIME, "MostRecentFailure" DATETIME, "EscalationLevel" INTEGER NOT NULL, "DisabledTill" DATETIME);
INSERT INTO sqlite_sequence VALUES('ApplicationStatus',0);
INSERT INTO sqlite_sequence VALUES('Commands',3);
INSERT INTO sqlite_sequence VALUES('DownloadClients',1);
INSERT INTO sqlite_sequence VALUES('DownloadClientStatus',0);
INSERT INTO sqlite_sequence VALUES('History',0);
INSERT INTO sqlite_sequence VALUES('IndexerDefinitionVersions',0);
INSERT INTO sqlite_sequence VALUES('IndexerStatus',0);
INSERT INTO sqlite_sequence VALUES('Indexers',20);
INSERT INTO sqlite_sequence VALUES('ScheduledTasks',8);
INSERT INTO sqlite_sequence VALUES('AppSyncProfiles',1);
INSERT INTO sqlite_sequence VALUES('Config',6);
INSERT INTO sqlite_sequence VALUES('Users',1);
INSERT INTO sqlite_sequence VALUES('IndexerProxies',1);
INSERT INTO sqlite_sequence VALUES('Tags',1);
CREATE UNIQUE INDEX "IX_Config_Key" ON "Config" ("Key" ASC);
CREATE UNIQUE INDEX "IX_Applications_Name" ON "Applications" ("Name" ASC);
CREATE UNIQUE INDEX "IX_Tags_Label" ON "Tags" ("Label" ASC);
CREATE UNIQUE INDEX "IX_Users_Identifier" ON "Users" ("Identifier" ASC);
CREATE UNIQUE INDEX "IX_Users_Username" ON "Users" ("Username" ASC);
CREATE UNIQUE INDEX "IX_AppSyncProfiles_Name" ON "AppSyncProfiles" ("Name" ASC);
CREATE UNIQUE INDEX "IX_ApplicationStatus_ProviderId" ON "ApplicationStatus" ("ProviderId" ASC);
CREATE UNIQUE INDEX "IX_DownloadClientStatus_ProviderId" ON "DownloadClientStatus" ("ProviderId" ASC);
CREATE INDEX "IX_History_DownloadId" ON "History" ("DownloadId" ASC);
CREATE INDEX "IX_History_Date" ON "History" ("Date" ASC);
CREATE UNIQUE INDEX "IX_IndexerDefinitionVersions_DefinitionId" ON "IndexerDefinitionVersions" ("DefinitionId" ASC);
CREATE UNIQUE INDEX "IX_IndexerDefinitionVersions_File" ON "IndexerDefinitionVersions" ("File" ASC);
CREATE UNIQUE INDEX "IX_IndexerStatus_ProviderId" ON "IndexerStatus" ("ProviderId" ASC);
CREATE UNIQUE INDEX "IX_Indexers_Name" ON "Indexers" ("Name" ASC);
CREATE UNIQUE INDEX "IX_ScheduledTasks_TypeName" ON "ScheduledTasks" ("TypeName" ASC);
CREATE UNIQUE INDEX "UC_Version" ON "VersionInfo" ("Version" ASC);
CREATE UNIQUE INDEX "IX_NotificationStatus_ProviderId" ON "NotificationStatus" ("ProviderId" ASC);
COMMIT;
