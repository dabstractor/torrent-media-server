# PIA VPN Provider Override
# Usage: docker-compose -f docker-compose.yml -f docker-compose.pia.yml up -d
# 
# Requirements:
# - Set PIA_USER and PIA_PASS in your .env file
# - Valid PIA subscription
#
# This file overrides the default WARP VPN with PIA's WireGuard service

# Custom networks for service isolation (inheriting from main compose file)
networks:
  media_network:
    driver: bridge
    ipam:
      config:
        - subnet: ${MEDIA_NETWORK_SUBNET}
  vpn_network:
    driver: bridge
    internal: true  # RESTORE: Complete isolation - no direct internet access
    ipam:
      config:
        - subnet: ${VPN_NETWORK_SUBNET}

services:
  vpn:
    image: thrnz/docker-wireguard-pia:latest
    environment:
      # PIA Credentials (required)
      - USER=${PIA_USER}
      - PASS=${PIA_PASS}
      
      # PIA Configuration  
      - LOC=${PIA_REGION:-us_atlanta}
      - PORTFORWARD=${PORT_FORWARDING:-1}
      - LOCAL_NETWORK=${LOCAL_NETWORK:-192.168.1.0/24}
      - KEEPALIVE=25
      - TZ=${TZ:-America/New_York}
      
    volumes:
      # PIA needs config storage for WireGuard keys and tokens
      - ./config/vpn:/config
      
    ports:
      # WireGuard port for PIA
      - ${PIA_WIREGUARD_PORT:-51821}:51820/udp
      # Exposed services through VPN
      - "${PIA_PROWLARR_PORT:-19696}:9696"
      - "${PIA_FLARESOLVERR_PORT:-18191}:8191"
      
    # Network configuration - VPN service needs both networks
    networks:
      default:
      vpn_network:
        ipv4_address: ${VPN_IP_ADDRESS}
    
    # Sysctls for network configuration
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    
    # Health check for PIA VPN - test connectivity through the tunnel
    healthcheck:
      test: ["CMD-SHELL", "curl -f --max-time 10 https://ipinfo.io/ip || exit 1"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 90s
    
    restart: unless-stopped